// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: category_query.sql

package repository

import (
	"context"
)

const createCategory = `-- name: CreateCategory :one
INSERT INTO category (name, key, modseq) VALUES (?, ?, ?) RETURNING id, name, "key", modseq, created_at
`

type CreateCategoryParams struct {
	Name   string
	Key    string
	Modseq int64
}

func (q *Queries) CreateCategory(ctx context.Context, arg CreateCategoryParams) (Category, error) {
	row := q.db.QueryRowContext(ctx, createCategory, arg.Name, arg.Key, arg.Modseq)
	var i Category
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Key,
		&i.Modseq,
		&i.CreatedAt,
	)
	return i, err
}

const getCategory = `-- name: GetCategory :one
SELECT id, name, "key", modseq, created_at FROM category WHERE key = ? LIMIT 1
`

func (q *Queries) GetCategory(ctx context.Context, key string) (Category, error) {
	row := q.db.QueryRowContext(ctx, getCategory, key)
	var i Category
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Key,
		&i.Modseq,
		&i.CreatedAt,
	)
	return i, err
}
